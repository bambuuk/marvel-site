{"version":3,"sources":["components/appHeader/AppHeader.js","services/MarvelService.js","resources/img/mjolnir.png","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","descriptionChar","description","length","slice","name","thumbnail","path","extension","homepage","urls","wiki","comics","items","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","alt","RandomChar","state","loading","error","marvelService","onCharLoaded","setState","onCharLoading","onError","updateChar","Math","floor","random","then","catch","this","errorMessage","spinner","content","onClick","mjolnir","Component","View","includes","CharList","chars","newItemLoading","charEnded","onRequest","onCharListLoading","onCharListLoaded","newChars","ended","toogleActiveChar","e","document","querySelectorAll","forEach","item","classList","remove","key","target","parentElement","focus","add","elem","onCharSelected","props","disabled","ListChars","tabIndex","onKeyPress","Skeleton","CharInfo","charId","prevProps","skeleton","imgStyle","i","ErrorBoundary","errorInfo","console","log","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.043e40c3.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","// Создаём обычный джаваскриптовый класс, поэтому не наследуем и не импортируем компоненты\r\nclass MarvelService {\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    _apiKey = 'apikey=0f63933eef0210b8256f2966cbc48725';\r\n    _baseOffset = 210;\r\n\r\n    getResource = async (url) => {\r\n\r\n        // В переменной res мы получаем промис\r\n        let res = await fetch(url);\r\n\r\n        /** Здесь мы создаём ошибку если статус запроса неудачный */\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n        }\r\n\r\n        return await res.json(); // возвращаем промис в формате json\r\n    }\r\n\r\n    // метод получения данных всех персонажей\r\n    getAllCharacters = async (offset = this._baseOffset) => {\r\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n        return res.data.results.map(this._transformCharacter);\r\n    }\r\n    \r\n    // метод получения данных одного персонажа\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\r\n        return this._transformCharacter(res.data.results[0]); // в _transformCharacter передаём конкретный объект (персонаж)\r\n    }\r\n\r\n    // метод формирования объекта с нужными нам данными персонажа, вытягиваем с ответа по гет запросу что нам нужно\r\n    _transformCharacter = (char) => {\r\n        let descriptionChar = '';\r\n        if (char.description) {\r\n            if (char.description.length > 190) {\r\n                descriptionChar = `${char.description.slice(0, 190)} ...`;\r\n            } else {\r\n                descriptionChar = char.description;\r\n            }\r\n        } else {\r\n            descriptionChar = 'There is no description for this character';\r\n        } \r\n        return {\r\n            name: char.name,\r\n            id: char.id,\r\n            description: descriptionChar,\r\n            // thumbnail - маленькая картинка, превьюха\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n}\r\n\r\nexport default MarvelService;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n            </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} src={img} alt='error'/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { Component } from 'react';\n\nimport './randomChar.scss';\nimport MarvelService from '../../services/MarvelService';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nclass RandomChar extends Component {\n\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({char, loading: false})\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    // обновляет текущий state с данными о персонаже\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400-1011000) + 1011000);\n        this.onCharLoading();\n        this.marvelService\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n\n    render() {\n        const {char, loading, error} = this.state;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br />\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button className=\"button button__main\">\n                        <div className=\"inner\" onClick={this.updateChar}>try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let style = {objectFit: 'cover'};\n    if (thumbnail.includes('image_not_available')) {\n        style = {objectFit: 'contain'}\n    }\n    return (\n        <div className=\"randomchar__block\">\n            <img \n            src={thumbnail} \n            alt=\"Random character\" \n            className=\"randomchar__img\" \n            style={style}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">{description}</p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './charList.scss';\n\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nclass CharList extends Component {\n\n    state = {\n        chars: [],\n        loading: true,\n        error: false,\n        newItemLoading: false, // необходим для блокироки кнопки добавления новых персонажей\n        offset: 210,\n        charEnded: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.onRequest();\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    onRequest = (offset) => {\n        this.onCharListLoading();\n        this.marvelService\n            .getAllCharacters(offset)\n            .then(this.onCharListLoaded)\n            .catch(this.onError)\n    }\n\n    onCharListLoading = () => {\n        this.setState({\n            newItemLoading: true\n        })\n    }\n\n    onCharListLoaded = (newChars) => {\n        let ended = false;\n        if (newChars.length < 9) {\n            ended = true;\n        }\n\n        this.setState(({ chars, offset }) => ({\n            // здесь мы объеденили массив текущих данных со стейта с новыми данными от запроса на сервер\n            chars: [...chars, ...newChars],\n            loading: false,\n            newItemLoading: false,\n            offset: offset + 9,\n            charEnded: ended\n        }))\n    }\n\n    toogleActiveChar = (id, e) => {\n        const charList = document.querySelectorAll('.char__item');\n        charList.forEach(item => {\n            item.classList.remove('char__item_selected');\n        })\n        if (e.key !== 'Enter') {\n            e.target.parentElement.focus();\n            e.target.parentElement.classList.add('char__item_selected');\n        } else {\n            e.target.focus();\n            e.target.classList.add('char__item_selected');\n        }\n    }\n\n    render() {\n        const { chars, loading, error, offset, newItemLoading, charEnded } = this.state;\n        const elem = chars.map(item => {\n            const { thumbnail, name, id } = item;\n\n            return (\n                <ListChars\n                    src={thumbnail}\n                    name={name}\n                    key={id}\n                    onCharSelected={() => { this.props.onCharSelected(id) }}\n                    toogleActiveChar={(e) => { this.toogleActiveChar(id, e) }}\n\n                />\n            );\n        });\n\n        if (loading) {\n            return <Spinner />\n        } else if (error) {\n            return <ErrorMessage />\n        } else {\n            return (\n                <div className=\"char__list\">\n                    <ul className=\"char__grid\">\n                        {elem}\n                    </ul>\n                    <button\n                        className=\"button button__main button__long\"\n                        disabled={newItemLoading}\n                        style={{ 'display': charEnded ? 'none' : 'block' }}\n                        onClick={() => this.onRequest(offset)}>\n                        <div className=\"inner\">load more</div>\n                    </button>\n                </div>\n            )\n        }\n    }\n}\n\nclass ListChars extends Component {\n\n    render() {\n        const { src, name, onCharSelected, toogleActiveChar } = this.props;\n        let style = { objectFit: 'cover' };\n        if (src.includes('image_not_available')) {\n            style = { objectFit: 'fill' }\n        }\n        return (\n            <li\n                tabIndex={0}\n                className=\"char__item\"\n                onClick={(e) => { onCharSelected(e); toogleActiveChar(e) }}\n                onKeyPress={(e) => {\n                    if (e.key === 'Enter') {\n                        onCharSelected(e);\n                        toogleActiveChar(e);\n                    };\n\n                }}\n            >\n                <img src={src} alt={name} style={style} />\n                <div className=\"char__name\">{name}</div>\n            </li>\n        )\n    }\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './charInfo.scss';\n\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nclass CharInfo extends Component {\n\n    state = {\n        char: null,\n        loading: false,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar();\n        }\n    }\n\n    updateChar = () => {\n        const { charId } = this.props;\n        if (!charId) {\n            return;\n        }\n\n        this.onCharLoading();\n\n        this.marvelService\n            .getCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n    \n\n    onCharLoaded = (char) => {\n        this.setState({ char, loading: false })\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    render() {\n        const { char, loading, error } = this.state;\n        // если нет инфы по персонажу, или спинера загрузки, или ошибки, то отображаем комп Skeleton\n        const skeleton = char || loading || error ? null : <Skeleton />\n        const errorMessage = error ? <ErrorMessage /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        // если нет спинера загрузки или нет ошибки\n        const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n}\n\nconst View = ({ char }) => {\n    const { name, description, thumbnail, homepage, wiki, comics } = char;\n\n    let imgStyle = {'objectFit': 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit': 'contain'};\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">Homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">WiKi</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'There is no comics with this character'}\n                {\n                    comics.map((item, i) => {\n                        if (i > 9) return;\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\n// компонента предохранитель\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\n\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n    state = {\n        selectedChar: null\n    }\n\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <AppHeader />\n                <main>\n                    <ErrorBoundary>\n                        <RandomChar />\n                    </ErrorBoundary>\n\n                    <div className=\"char__content\">\n                        <ErrorBoundary>\n                            <CharList onCharSelected={this.onCharSelected} />\n                        </ErrorBoundary>\n\n                        <ErrorBoundary>\n                            <CharInfo charId={this.state.selectedChar} />\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}