{"version":3,"sources":["components/skeleton/Skeleton.js","utils/setContent.js","components/pages/SingleComicPage.js"],"names":["Skeleton","className","setContent","process","Component","data","Spinner","ErrorMessage","Error","View","title","description","pageCount","thumbnail","language","price","name","content","src","alt","to","SingleComicPage","comicId","useParams","useState","comic","setComic","useMarvelService","getComics","clearError","setProcess","useEffect","updateComic","then","onComicLoaded"],"mappings":"mIAmBeA,EAjBE,WACb,OACI,qCACI,mBAAGC,UAAU,eAAb,0DACA,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,yBAAf,UACI,qBAAKA,UAAU,2BACf,qBAAKA,UAAU,4BAEnB,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,iCCMhBC,IAfI,SAACC,EAASC,EAAWC,GACtC,OAAQF,GACN,IAAK,UACH,OAAO,cAAC,EAAD,IACT,IAAK,UACH,OAAO,cAACG,EAAA,EAAD,IACT,IAAK,YACH,OAAO,cAACF,EAAD,CAAWC,KAAMA,IAC1B,IAAK,QACH,OAAO,cAACE,EAAA,EAAD,IACT,QACE,MAAM,IAAIC,MAAM,+B,gKCwBhBC,EAAO,SAAC,GAAc,IAAZJ,EAAW,EAAXA,KACJK,EAA8DL,EAA9DK,MAAOC,EAAuDN,EAAvDM,YAAaC,EAA0CP,EAA1CO,UAAWC,EAA+BR,EAA/BQ,UAAWC,EAAoBT,EAApBS,SAAUC,EAAUV,EAAVU,MAE5D,OACI,sBAAKd,UAAU,eAAf,UACI,eAAC,IAAD,WACI,sBACIe,KAAK,cACLC,QAAO,UAAKP,EAAL,kBAEX,gCAAQA,OAEZ,qBAAKQ,IAAKL,EAAWM,IAAKT,EAAOT,UAAU,sBAC3C,sBAAKA,UAAU,qBAAf,UACI,oBAAIA,UAAU,qBAAd,SAAoCS,IACpC,mBAAGT,UAAU,sBAAb,SAAoCU,IACpC,mBAAGV,UAAU,sBAAb,SAAoCW,IACpC,oBAAGX,UAAU,sBAAb,uBAA8Ca,KAC9C,sBAAKb,UAAU,sBAAf,UAAsCc,EAAtC,UAEJ,cAAC,IAAD,CAAMK,GAAG,UAAUnB,UAAU,qBAA7B,6BAKGoB,UAvDS,WACpB,IAAQC,EAAYC,cAAZD,QACR,EAA0BE,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAuDC,cAA/CC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,WAAY1B,EAA/B,EAA+BA,QAAS2B,EAAxC,EAAwCA,WAExCC,qBAAU,WACNC,MAED,CAACV,IAEJ,IAAMU,EAAc,WAEhBH,IACAD,EAAUN,GACLW,KAAKC,GACLD,MAAK,kBAAMH,EAAW,iBAGzBI,EAAgB,SAACT,GACnBC,EAASD,IAGb,OACI,qCACI,cAAC,IAAD,IACCvB,YAAWC,EAASM,EAAMgB","file":"static/js/7.f0256417.chunk.js","sourcesContent":["import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import Spinner from '../components/spinner/Spinner';\r\nimport ErrorMessage from '../components/errorMessage/ErrorMessage';\r\nimport Skeleton from '../components/skeleton/Skeleton';\r\n\r\nconst setContent = (process, Component, data) => {\r\n  switch (process) {\r\n    case 'waiting':\r\n      return <Skeleton />;\r\n    case 'loading':\r\n      return <Spinner />;\r\n    case 'confirmed':\r\n      return <Component data={data} />;\r\n    case 'error':\r\n      return <ErrorMessage />;\r\n    default:\r\n      throw new Error('Unexpected process state');\r\n  }\r\n}\r\n\r\nexport default setContent;","import { useParams, Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from 'react';\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport setContent from \"../../utils/setContent\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport './singleComicPage.scss';\r\n\r\nconst SingleComicPage = () => {\r\n    const { comicId } = useParams();\r\n    const [comic, setComic] = useState(null);\r\n    const { getComics, clearError, process, setProcess } = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateComic();\r\n        // eslint-disable-next-line\r\n    }, [comicId])\r\n\r\n    const updateComic = () => {\r\n        //вызываем очистку ошибки каждый раз, когда загружаем нового персонажа\r\n        clearError();\r\n        getComics(comicId)\r\n            .then(onComicLoaded)\r\n            .then(() => setProcess('confirmed'))\r\n    }\r\n\r\n    const onComicLoaded = (comic) => {\r\n        setComic(comic);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AppBanner />\r\n            {setContent(process, View, comic)}\r\n        </>   \r\n    )\r\n}\r\n\r\nconst View = ({ data }) => {\r\n    const { title, description, pageCount, thumbnail, language, price } = data;\r\n\r\n    return (\r\n        <div className=\"single-comic\">\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content={`${title} comics book`}\r\n                />\r\n                <title>{title}</title>\r\n            </Helmet>\r\n            <img src={thumbnail} alt={title} className=\"single-comic__img\" />\r\n            <div className=\"single-comic__info\">\r\n                <h2 className=\"single-comic__name\">{title}</h2>\r\n                <p className=\"single-comic__descr\">{description}</p>\r\n                <p className=\"single-comic__descr\">{pageCount}</p>\r\n                <p className=\"single-comic__descr\">Language: {language}</p>\r\n                <div className=\"single-comic__price\">{price}$</div>\r\n            </div>\r\n            <Link to=\"/comics\" className=\"single-comic__back\">Back to all</Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SingleComicPage;"],"sourceRoot":""}